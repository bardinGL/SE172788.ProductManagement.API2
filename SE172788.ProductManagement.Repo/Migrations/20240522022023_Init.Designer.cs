// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SE172788.ProductManagement.Repo.Entities;

#nullable disable

namespace SE172788.ProductManagement.Repo.Migrations
{
    [DbContext(typeof(DBContext))]
    [Migration("20240522022023_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SE172788.ProductManagement.Repo.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Beverages"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Condiments"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Confections"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Dairy Products"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Grains/Cereals"
                        },
                        new
                        {
                            CategoryId = 6,
                            CategoryName = "Meat/Poultry"
                        },
                        new
                        {
                            CategoryId = 7,
                            CategoryName = "Produce"
                        },
                        new
                        {
                            CategoryId = 8,
                            CategoryName = "Seafood"
                        });
                });

            modelBuilder.Entity("SE172788.ProductManagement.Repo.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnitsInStock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
new
{
    ProductId = 10,
    CategoryId = 10,
    ProductName = "Spaghetti",
    UnitPrice = 5.5m,
    UnitsInStock = 10
},
new
{
    ProductId = 11,
    CategoryId = 11,
    ProductName = "Tacos",
    UnitPrice = 6.5m,
    UnitsInStock = 15
},
new
{
    ProductId = 12,
    CategoryId = 12,
    ProductName = "Burrito",
    UnitPrice = 7.5m,
    UnitsInStock = 20
},
new
{
    ProductId = 13,
    CategoryId = 13,
    ProductName = "Ramen",
    UnitPrice = 8.5m,
    UnitsInStock = 25
},
new
{
    ProductId = 14,
    CategoryId = 14,
    ProductName = "Lobster",
    UnitPrice = 9.5m,
    UnitsInStock = 30
},
new
{
    ProductId = 15,
    CategoryId = 15,
    ProductName = "Pasta",
    UnitPrice = 10.5m,
    UnitsInStock = 35
},
new
{
    ProductId = 16,
    CategoryId = 16,
    ProductName = "Salad",
    UnitPrice = 11.5m,
    UnitsInStock = 40
}
);
                });

            modelBuilder.Entity("SE172788.ProductManagement.Repo.Entities.Product", b =>
                {
                    b.HasOne("SE172788.ProductManagement.Repo.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SE172788.ProductManagement.Repo.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
